#include <iostream>
#include <vector>

int DistanciaHamming(const vector<bool>& num1, const vector<bool>& num2) {
    if (num1.size() != num2.size()) {
    cout << "Los vectores tienen longitudes diferentes." << endl;
        return -1; 
    }

    int distancia = 0;

    for (size_t i = 0; i < num1.size(); i++) {
        if (num1[i] != num2[i]) {
            distancia++;
        }
    }

    return distancia;
}

vector<bool> EnteroAVectorBits(int numero, size_t longitud) {
vector<bool> bits;
    for (size_t i = 0; i < longitud; i++) {
        bits.push_back((numero >> i) & 1);
    }
    return bits;
}

int main() {
    int numero1, numero2;
    size_t longitud;

    cout << "Ingrese el primer número ";
    cin >> numero1;
    cout << "Ingrese el segundo número ";
    cin >> numero2;

    cout << "ingrese la longitud";
    cin >> longitud;

    vector<bool> vectorBits1 = EnteroAVectorBits(numero1, longitud);
    vector<bool> vectorBits2 = EnteroAVectorBits(numero2, longitud);

    int distancia = DistanciaHamming(vectorBits1, vectorBits2);

    if (distancia >= 0) {
    cout << "La distancia de Hamming entre los números binarios es: " << distancia << endl;
    }

    return 0;
}
